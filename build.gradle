buildscript {
    ext {
        cleanArchitectureVersion = '3.6.0'
        springBootVersion = '3.1.2'
        springDependencyManagementVersion = "1.1.2"
        sonarVersion = '4.3.0.3225'
    }
}

plugins {
    id("org.springframework.boot") version "${springBootVersion}"
    id("io.spring.dependency-management") version "${springDependencyManagementVersion}"
    id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
    id 'org.sonarqube' version "${sonarVersion}"
    id 'jacoco'
    id 'idea'
}

sonarqube {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEnconding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions", "**/MainApplication.java"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

springBoot {
    mainClass = 'co.com.bancolombia.MainApplication'
}

apply from: './main.gradle'
